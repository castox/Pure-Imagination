JominiBrowserWindow2 = {
	
}
#gui.createwidget gui/browser_window.gui JominiBrowserWindow
#gui.ClearWidgets JominiBrowserWindow

types CreditsWindow {
	type JominiWebView2 = webwindow {
		name = "webwindow2"
		size = { 100% 100% }
		
	}

	type JominiWebViewAddressBox2 = editbox {
		text = "[BrowserWindow.GetUrl]"
		oneditingfinished = [BrowserWindow.SetUrl];

		block "addressstyle" {
			alwaystransparent = no
			focuspolicy = all

			cursorcolor = { 1 1 0.5 1 }
			selectioncolor = { 0.45 0.45 0.45 0.7 }
			
			background = {
				margin_left = 5
				margin_top = 0
				texture = "gfx/editor_gui/editor_fields.dds"
				spriteType = CorneredStretched
				spriteborder = { 4 4 }
				shaderfile = "gfx/FX/pdxgui_default.shader"
			}
		}
	}
	
	type JominiBrowserWindowBackwardButton2 = JominiWebViewButton {
		name = "backward_button"
		block "buttontexture" {
			texture = "gfx/browser/backward.png"
		}
		enabled = "[BrowserWindow.CanGoBack]"
		onclick = "[BrowserWindow.GoBack]"
	}
	
	type JominiBrowserWindowForwardButton2 = JominiWebViewButton {
		name = "forward_button"
		block "buttontexture" {
			texture = "gfx/browser/forward.png" 
		}
		enabled = "[BrowserWindow.CanGoForward]"
		onclick = "[BrowserWindow.GoForward]"
	}
	
	type JominiBrowserWindowReloadButton2 = JominiWebViewButton {
		name = "reload_button"
		block "buttontexture" {
			texture = "gfx/browser/reload.png"
		}
		onclick = "[BrowserWindow.ReloadPage]"
	}
	
	type JominiBrowserWindowHomeButton2 = JominiWebViewButton {
		name = "home_button"
		block "buttontexture" {
			texture = "gfx/browser/home.png"
		}
		onclick = "[BrowserWindow.GoHome]"
	}
	
	type JominiBrowserWindowCloseButton2 = JominiWebViewButton {
		name = "close_button"
		block "buttontexture" {
			texture = "gfx/browser/close.png"
		}
		#onclick = "[BrowserWindow.Close]"
		onclick = "[ExecuteConsoleCommand('gui.ClearWidgets JominiBrowserWindow')]"
	}
	
	type JominiBrowserWindowAddressBox2 = JominiWebViewAddressBox {
		layoutpolicy_horizontal = expanding
	}
	
	type JominiBrowserWindow2 = window {
		name = "JominiBrowserWindow2"
		maximumsize = { 4096 2160 }
		
		block "browserwindowstyle" {
			using = editor_window
			#position = { 268 32 }
			parentanchor = hcenter|vcenter
			#size = { 100% 100% }
			size = { 880 480 }
			minimumsize = { 250 250 }
			resizable = yes

			vbox = {
				margin = { 5 5 }
				margin_top = 30
				hbox = {
					layoutpolicy_horizontal = expanding

					JominiBrowserWindowBackwardButton2 = {}

					JominiBrowserWindowForwardButton2 = {}

					JominiBrowserWindowReloadButton2 = {}

					JominiBrowserWindowHomeButton2 = {}

					JominiBrowserWindowAddressBox2 = {}

					JominiBrowserWindowCloseButton2 = {}
				} 
			}
			
			vbox = {
				
				JominiWebView2 = {}
			}
		}
	}
	
}
# Credits window

template JominiCreditsWindowBackground2 {
	block "background" {
		shaderfile = "gfx/FX/pdxgui_default.shader"
		texture = "gfx/editor_gui/editor_window.dds"
		spriteType = CorneredStretched
		spriteborder = { 6 6 }
		spriteborder_top = 30
		gfxtype = windowgfx
	}
}

template JominiCreditsWindowScrollbar2 {
	block "scrollbar" {
		using = editor_vertical_scrollbar
	}
}

template JominiCreditsWindowTextbox2
{
	textbox = {
		block "textbox" {
			font = "standard_cw_font"
			fontsize = 13
			fontcolor = { 1 1 1 1 }
			widgetanchor = top|hcenter
			parentanchor = top|hcenter
			align = center
		}
		autoresize = yes
		multiline = yes
		text = "[CreditsWindow.GetCredits]"
	}	
}

types CreditsWindow {
			
	# Button Style
	type JominiCredistsViewButton2 = button {
		block "buttonstyle" {
			size = { 100% 40 }
			texture = "gfx/editor_gui/editor_button.dds"
			gfxtype = framedbuttongfx
			spriteType = CorneredStretched
			spriteborder = { 4 4 }
			effectname = "NoHighlight"
			framesize = { 16 16 }
			upframe = 1
			downframe = 2
			overframe = 3
			disableframe = 4
			intersectionmask = yes
		}
	}
		
	type JominiCreditsWindowScrollarea2 = scrollarea {
		name = "credits_scroll_area"
		size = { 100% 100% }
		scrollbarpolicy_horizontal = always_off
		
		scrollbar_vertical = {
			using = JominiCreditsWindowScrollbar
		}
		
		scrollwidget = {
			using = JominiCreditsWindowTextbox
		}
	}

	type JominiCreditsWindow2 = widget {
		name = "JominiCreditsWindow"

		size = { 40% 80% }
		widgetanchor = vcenter|hcenter
		parentanchor = vcenter|hcenter

		alwaystransparent = no
		
		background = {
			using = JominiCreditsWindowBackground
		}

		state = {
			name = _show
			next = "auto_scrollbar"
		}

		state = {
			name = "auto_scrollbar"
			delay = 0.5
			on_finish = "[CreditsWindow.OnTogglePause]"
		}

		JominiCreditsWindowScrollarea2 = {}

		JominiCreditsWindowCloseButton2 = {}

		JominiCreditsWindowSlowerButton2 = {}
		
		JominiCreditsWindowTogglePauseButton2 = {}
		
		JominiCreditsWindowFasterButton2 = {}		
	}

	type JominiCreditsWindowCloseButton2 = JominiCredistsViewButton {
		block "close_button"
		{
			position = { 0 0 }
			size = { 100 25 }
			text = "CREDITS_CLOSE"
			parentanchor = top|right
			widgetanchor = top|right
		}
		name = "close_button"
		onclick = "[CreditsWindow.OnClose]"
	}

	type JominiCreditsWindowTogglePauseButton2 = JominiCredistsViewButton {
		block "toggle_pause_button"
		{
			position = { 0 0 }
			size = { 100 25 }
			text = "[SelectLocalization(CreditsWindow.IsPaused,'CREDITS_CONTINUE','CREDITS_PAUSE')]"
			parentanchor = bottom|hcenter
			widgetanchor = bottom|hcenter
		}
		name = "toggle_pause_button"
		onclick = "[CreditsWindow.OnTogglePause]"
	}

	type JominiCreditsWindowSlowerButton2 = JominiCredistsViewButton {
		block "slower_button"
		{
			position = { -150 0 }
			size = { 100 25 }
			text = "CREDITS_SLOWER"
			parentanchor = bottom|hcenter
			widgetanchor = bottom|hcenter
		}
		name = "slower_button"
		visible = "[Not(CreditsWindow.IsSlowest)]"
		onclick = "[CreditsWindow.OnSlower]"
	}

	type JominiCreditsWindowFasterButton2 = JominiCredistsViewButton {
		block "faster_button"
		{
			position = { 150 0 }
			size = { 100 25 }
			text = "CREDITS_FASTER"
			parentanchor = bottom|hcenter
			widgetanchor = bottom|hcenter
		}
		name = "faster_button"
		visible = "[Not(CreditsWindow.IsFastest)]"
		onclick = "[CreditsWindow.OnFaster]"		
	}
}

# Credits frontend view

template JominiCreditsViewBackground2 {
	block "background" {
		shaderfile = "gfx/FX/pdxgui_default.shader"
		texture = "gfx/editor_gui/editor_window.dds"
		spriteType = CorneredStretched
		spriteborder = { 6 6 }
		spriteborder_top = 30
		gfxtype = windowgfx
	}
}

types FrontEndCreditsView2 {
	type JominiFrontEndCreditsView = widget {
		name = "JominiFrontEndCreditsView"
		size = { 100% 100% }
		
		background = {
			using = JominiCreditsViewBackground
		}
		
		JominiFrontEndCreditsViewBackButton2 = {}
	}

	type JominiFrontEndCreditsViewBackButton2 = JominiCredistsViewButton {
		block "back_button"
		{
			parentanchor = bottom|hcenter
			position = { 0 0 }
			size = { 250 42 }
			text = "CREDITS_BACK"
		}
		
		name = "back_button"
		shortcut = "close_window"
		onclick = "[FrontEndCreditsView.OnBack]"
	}
}